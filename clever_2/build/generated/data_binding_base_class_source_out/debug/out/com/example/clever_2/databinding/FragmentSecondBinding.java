// Generated by view binder compiler. Do not edit!
package com.example.clever_2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.clever_2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSecondBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonExit;

  @NonNull
  public final ImageButton imageButtonBack;

  @NonNull
  public final ImageView imageTitleLarge;

  @NonNull
  public final Toolbar toolBarSecondFragment;

  @NonNull
  public final TextView txtDescriptionLarge;

  @NonNull
  public final TextView txtTitleLarge;

  private FragmentSecondBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonExit,
      @NonNull ImageButton imageButtonBack, @NonNull ImageView imageTitleLarge,
      @NonNull Toolbar toolBarSecondFragment, @NonNull TextView txtDescriptionLarge,
      @NonNull TextView txtTitleLarge) {
    this.rootView = rootView;
    this.buttonExit = buttonExit;
    this.imageButtonBack = imageButtonBack;
    this.imageTitleLarge = imageTitleLarge;
    this.toolBarSecondFragment = toolBarSecondFragment;
    this.txtDescriptionLarge = txtDescriptionLarge;
    this.txtTitleLarge = txtTitleLarge;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSecondBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSecondBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_second, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSecondBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonExit;
      Button buttonExit = rootView.findViewById(id);
      if (buttonExit == null) {
        break missingId;
      }

      id = R.id.imageButtonBack;
      ImageButton imageButtonBack = rootView.findViewById(id);
      if (imageButtonBack == null) {
        break missingId;
      }

      id = R.id.imageTitleLarge;
      ImageView imageTitleLarge = rootView.findViewById(id);
      if (imageTitleLarge == null) {
        break missingId;
      }

      id = R.id.toolBarSecondFragment;
      Toolbar toolBarSecondFragment = rootView.findViewById(id);
      if (toolBarSecondFragment == null) {
        break missingId;
      }

      id = R.id.txtDescriptionLarge;
      TextView txtDescriptionLarge = rootView.findViewById(id);
      if (txtDescriptionLarge == null) {
        break missingId;
      }

      id = R.id.txtTitleLarge;
      TextView txtTitleLarge = rootView.findViewById(id);
      if (txtTitleLarge == null) {
        break missingId;
      }

      return new FragmentSecondBinding((ConstraintLayout) rootView, buttonExit, imageButtonBack,
          imageTitleLarge, toolBarSecondFragment, txtDescriptionLarge, txtTitleLarge);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
